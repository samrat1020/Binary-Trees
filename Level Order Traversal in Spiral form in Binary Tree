void printSpiral(Node *root)
{
    bool flag = 0;
    vector<int> v;
    queue<Node *> q;
    if(root == NULL) {
        return;
    }
    q.push(root);
    q.push(NULL);
    while(!q.empty()) {
        Node *temp = q.front();
        q.pop();
        if(temp == NULL && q.front() == NULL) {
            break;
        } else if(temp == NULL) {
            q.push(NULL);
            if(flag == 1) {
                for(int i = 0; i < v.size(); i++) {
                    cout << v[i] << " ";
                }
            } else {
                for(int i = v.size()-1; i >= 0; i--) {
                    cout << v[i] << " ";
                }
            }
            v.clear();
            flag = !flag;
            
        } else {
            v.push_back(temp->data);
            if(temp->left) {
                q.push(temp->left);
            } 
            if(temp->right) {
                q.push(temp->right);
            }
        }
    }
    if(flag == 1) {
        for(int i = 0; i < v.size(); i++) {
            cout << v[i] << " ";
        }
    } else {
        for(int i = v.size()-1; i >= 0; i--) {
            cout << v[i] << " ";
        }
    }
}
